{"ast":null,"code":"var _jsxFileName = \"/Users/yannihome/Documents/School/HackerU/Projects/HackeruProject-react-YanivZinger/hackeru-react-shop/src/pages/CreateCardPage/CreateCardPage.jsx\",\n  _s = $RefreshSig$();\n// CreateCardPage.jsx\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport CardForm, { fields } from \"./CardForm\";\nimport ROUTES from \"../../routes/ROUTES\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateCardPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [inputsValue, setInputValue] = useState({\n    title: \"\",\n    subtitle: \"\",\n    phone: \"\",\n    description: \"\",\n    web: \"\",\n    email: \"\",\n    url: \"\",\n    alt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    zip: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    title: \"\",\n    subtitle: \"\",\n    phone: \"\",\n    description: \"\",\n    web: \"\",\n    email: \"\",\n    url: \"\",\n    alt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    zip: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setInputValue(currentState => ({\n      ...currentState,\n      [id]: value\n    }));\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [id]: value.trim() === \"\" ? `${id.charAt(0).toUpperCase() + id.slice(1)} is required` : \"\"\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formErrors = {};\n    for (const field of fields) {\n      if (field.required && !inputsValue[field.id].trim()) {\n        formErrors[field.id] = `${field.label} is required`;\n      }\n    }\n    if (Object.values(formErrors).length > 0) {\n      setErrors(formErrors);\n      toast.error(\"Please fill in all required fields correctly.\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axios.post(\"/cards\", {\n        title: inputsValue.title,\n        subtitle: inputsValue.subtitle,\n        description: inputsValue.description,\n        phone: inputsValue.phone,\n        email: inputsValue.email,\n        web: inputsValue.web,\n        image: {\n          url: inputsValue.url,\n          alt: inputsValue.alt\n        },\n        address: {\n          state: inputsValue.state,\n          country: inputsValue.country,\n          city: inputsValue.city,\n          street: inputsValue.street,\n          houseNumber: inputsValue.houseNumber,\n          zip: +inputsValue.zip\n        }\n      });\n      toast.success(\"You've created a business card!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n      navigate(ROUTES.MYCARDS);\n    } catch (err) {\n      if (err.response && err.response.data) {\n        const serverErrors = err.response.data;\n        setErrors(serverErrors);\n\n        // Conditional sentence for displaying error message and instructions\n        toast.error(\"Error creating card. Please review the form for errors.\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n      } else {\n        toast.error(\"Error creating card. Please try again.\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CardForm, {\n    fields: fields,\n    inputsValue: inputsValue,\n    errors: errors,\n    loading: loading,\n    handleInputChange: handleInputChange,\n    handleSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateCardPage, \"ch26PSu/wAkT/VCLHlCwV86dtA8=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCardPage;\nexport default CreateCardPage;\nvar _c;\n$RefreshReg$(_c, \"CreateCardPage\");","map":{"version":3,"names":["React","useState","toast","axios","CardForm","fields","ROUTES","useNavigate","jsxDEV","_jsxDEV","CreateCardPage","_s","navigate","inputsValue","setInputValue","title","subtitle","phone","description","web","email","url","alt","state","country","city","street","houseNumber","zip","loading","setLoading","errors","setErrors","handleInputChange","e","id","value","target","currentState","prevErrors","trim","charAt","toUpperCase","slice","handleSubmit","preventDefault","formErrors","field","required","label","Object","values","length","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","data","post","image","address","success","MYCARDS","err","response","serverErrors","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yannihome/Documents/School/HackerU/Projects/HackeruProject-react-YanivZinger/hackeru-react-shop/src/pages/CreateCardPage/CreateCardPage.jsx"],"sourcesContent":["// CreateCardPage.jsx\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport CardForm, { fields } from \"./CardForm\";\nimport ROUTES from \"../../routes/ROUTES\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CreateCardPage = () => {\n  const navigate = useNavigate();\n\n  const [inputsValue, setInputValue] = useState({\n    title: \"\",\n    subtitle: \"\",\n    phone: \"\",\n    description: \"\",\n    web: \"\",\n    email: \"\",\n    url: \"\",\n    alt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    zip: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    title: \"\",\n    subtitle: \"\",\n    phone: \"\",\n    description: \"\",\n    web: \"\",\n    email: \"\",\n    url: \"\",\n    alt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    zip: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setInputValue((currentState) => ({\n      ...currentState,\n      [id]: value,\n    }));\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [id]:\n        value.trim() === \"\"\n          ? `${id.charAt(0).toUpperCase() + id.slice(1)} is required`\n          : \"\",\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formErrors = {};\n    for (const field of fields) {\n      if (field.required && !inputsValue[field.id].trim()) {\n        formErrors[field.id] = `${field.label} is required`;\n      }\n    }\n\n    if (Object.values(formErrors).length > 0) {\n      setErrors(formErrors);\n      toast.error(\"Please fill in all required fields correctly.\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const { data } = await axios.post(\"/cards\", {\n        title: inputsValue.title,\n        subtitle: inputsValue.subtitle,\n        description: inputsValue.description,\n        phone: inputsValue.phone,\n        email: inputsValue.email,\n        web: inputsValue.web,\n        image: {\n          url: inputsValue.url,\n          alt: inputsValue.alt,\n        },\n        address: {\n          state: inputsValue.state,\n          country: inputsValue.country,\n          city: inputsValue.city,\n          street: inputsValue.street,\n          houseNumber: inputsValue.houseNumber,\n          zip: +inputsValue.zip,\n        },\n      });\n\n      toast.success(\"You've created a business card!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n      navigate(ROUTES.MYCARDS);\n    } catch (err) {\n      if (err.response && err.response.data) {\n        const serverErrors = err.response.data;\n        setErrors(serverErrors);\n\n        // Conditional sentence for displaying error message and instructions\n        toast.error(\"Error creating card. Please review the form for errors.\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n      } else {\n        toast.error(\"Error creating card. Please try again.\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <CardForm\n      fields={fields}\n      inputsValue={inputsValue}\n      errors={errors}\n      loading={loading}\n      handleInputChange={handleInputChange}\n      handleSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default CreateCardPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}