{"ast":null,"code":"import Joi from \"joi\";\nimport validation from \"./validation\";\nconst registerSchema = Joi.object({\n  first: Joi.string().min(2).max(256).required(),\n  middle: Joi.string().min(2).max(256).allow(\"\"),\n  last: Joi.string().min(2).max(256).required(),\n  phone: Joi.string().min(9).max(11).pattern(/^\\+?(972|0)(\\-)?0?(([23489]{1}\\d{7})|[5]{1}\\d{8})$/).required(),\n  email: Joi.string().email({\n    tlds: {\n      allow: false\n    }\n  }).min(5).required(),\n  password: Joi.string().pattern(new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*-])[A-Za-z\\d!@#$%^&*-]{6,}$/)).messages({\n    \"string.pattern.base\": \"the password should be...\",\n    \"string.empty\": \"password must be filled with something that you will forget\"\n  }).min(7).max(20).required(),\n  url: Joi.string().min(14).allow(\"\"),\n  alt: Joi.string().min(2).max(256).allow(\"\"),\n  state: Joi.string().min(2).max(256).allow(\"\"),\n  country: Joi.string().min(2).max(256).required(),\n  city: Joi.string().min(2).max(256).required(),\n  street: Joi.string().min(2).max(256).required(),\n  houseNumber: Joi.number().min(2).max(256).required(),\n  zip: Joi.number().min(2).max(256).allow(\"\"),\n  isBusiness: Joi.boolean()\n});\nconst validateRegister = inputToCheck => validation(registerSchema, inputToCheck);\nexport { validateRegister };","map":{"version":3,"names":["Joi","validation","registerSchema","object","first","string","min","max","required","middle","allow","last","phone","pattern","email","tlds","password","RegExp","messages","url","alt","state","country","city","street","houseNumber","number","zip","isBusiness","boolean","validateRegister","inputToCheck"],"sources":["/Users/yannihome/Documents/School/HackerU/Projects/HackeruProject-react-YanivZinger test/hackeru-react-shoptest/src/validation/registerValidation.js"],"sourcesContent":["import Joi from \"joi\";\nimport validation from \"./validation\";\n\nconst registerSchema = Joi.object({\n  first: Joi.string().min(2).max(256).required(),\n  middle: Joi.string().min(2).max(256).allow(\"\"),\n  last: Joi.string().min(2).max(256).required(),\n  phone: Joi.string()\n    .min(9)\n    .max(11)\n    .pattern(/^\\+?(972|0)(\\-)?0?(([23489]{1}\\d{7})|[5]{1}\\d{8})$/)\n    .required(),\n  email: Joi.string()\n    .email({ tlds: { allow: false } })\n    .min(5)\n    .required(),\n  password: Joi.string()\n    .pattern(\n      new RegExp(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*-])[A-Za-z\\d!@#$%^&*-]{6,}$/\n      )\n    )\n    .messages({\n      \"string.pattern.base\": \"the password should be...\",\n      \"string.empty\":\n        \"password must be filled with something that you will forget\",\n    })\n    .min(7)\n    .max(20)\n    .required(),\n  url: Joi.string().min(14).allow(\"\"),\n  alt: Joi.string().min(2).max(256).allow(\"\"),\n  state: Joi.string().min(2).max(256).allow(\"\"),\n  country: Joi.string().min(2).max(256).required(),\n  city: Joi.string().min(2).max(256).required(),\n  street: Joi.string().min(2).max(256).required(),\n  houseNumber: Joi.number().min(2).max(256).required(),\n  zip: Joi.number().min(2).max(256).allow(\"\"),\n  isBusiness: Joi.boolean(),\n});\n\nconst validateRegister = (inputToCheck) =>\n  validation(registerSchema, inputToCheck);\n\nexport { validateRegister };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}