{"ast":null,"code":"import Joi from\"joi\";import validation from\"./validation\";var registerSchema=Joi.object({first:Joi.string().min(2).max(256).required(),middle:Joi.string().min(2).max(256).allow(\"\"),last:Joi.string().min(2).max(256).required(),phone:Joi.string().min(9).max(11).pattern(/^\\+?(972|0)(\\-)?0?(([23489]{1}\\d{7})|[5]{1}\\d{8})$/).required(),email:Joi.string().email({tlds:{allow:false}}).min(5).required(),password:Joi.string().pattern(new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*-])[A-Za-z\\d!@#$%^&*-]{6,}$/)).messages({\"string.pattern.base\":\"the password should be...\",\"string.empty\":\"password must be filled with something that you will forget\"}).min(7).max(20).required(),url:Joi.string().min(14).allow(\"\"),alt:Joi.string().min(2).max(256).allow(\"\"),state:Joi.string().min(2).max(256).allow(\"\"),country:Joi.string().min(2).max(256).required(),city:Joi.string().min(2).max(256).required(),street:Joi.string().min(2).max(256).required(),houseNumber:Joi.number().min(2).max(256).required(),zip:Joi.number().min(2).max(256).allow(\"\"),isBusiness:Joi.boolean()});var validateRegister=function validateRegister(inputToCheck){return validation(registerSchema,inputToCheck);};export{validateRegister};","map":{"version":3,"names":["Joi","validation","registerSchema","object","first","string","min","max","required","middle","allow","last","phone","pattern","email","tlds","password","RegExp","messages","url","alt","state","country","city","street","houseNumber","number","zip","isBusiness","boolean","validateRegister","inputToCheck"],"sources":["/Users/yannihome/Documents/School/HackerU/Projects/HackeruProject-react-YanivZinger/hackeru-react-shop/src/validation/registerValidation.js"],"sourcesContent":["import Joi from \"joi\";\nimport validation from \"./validation\";\n\nconst registerSchema = Joi.object({\n  first: Joi.string().min(2).max(256).required(),\n  middle: Joi.string().min(2).max(256).allow(\"\"),\n  last: Joi.string().min(2).max(256).required(),\n  phone: Joi.string()\n    .min(9)\n    .max(11)\n    .pattern(/^\\+?(972|0)(\\-)?0?(([23489]{1}\\d{7})|[5]{1}\\d{8})$/)\n    .required(),\n  email: Joi.string()\n    .email({ tlds: { allow: false } })\n    .min(5)\n    .required(),\n  password: Joi.string()\n    .pattern(\n      new RegExp(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*-])[A-Za-z\\d!@#$%^&*-]{6,}$/\n      )\n    )\n    .messages({\n      \"string.pattern.base\": \"the password should be...\",\n      \"string.empty\":\n        \"password must be filled with something that you will forget\",\n    })\n    .min(7)\n    .max(20)\n    .required(),\n  url: Joi.string().min(14).allow(\"\"),\n  alt: Joi.string().min(2).max(256).allow(\"\"),\n  state: Joi.string().min(2).max(256).allow(\"\"),\n  country: Joi.string().min(2).max(256).required(),\n  city: Joi.string().min(2).max(256).required(),\n  street: Joi.string().min(2).max(256).required(),\n  houseNumber: Joi.number().min(2).max(256).required(),\n  zip: Joi.number().min(2).max(256).allow(\"\"),\n  isBusiness: Joi.boolean(),\n});\n\nconst validateRegister = (inputToCheck) =>\n  validation(registerSchema, inputToCheck);\n\nexport { validateRegister };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}